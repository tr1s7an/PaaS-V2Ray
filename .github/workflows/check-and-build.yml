name: Check and Build 
on:
  schedule:
    - cron:  '0 10 * * *'
  watch:
    types: [started]
jobs:
  check:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    outputs:
      modified: ${{ steps.git-check.outputs.modified }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch release version
        run: |
          ss_version=$(curl -s https://github.com/shadowsocks/shadowsocks-rust/releases/latest |grep -o 'tag\/v[0-9].*[0-9]' |grep -o '[0-9].*[0-9]')
          v2ray_version=$(curl -s https://github.com/v2fly/v2ray-core/releases/latest |grep -o 'tag\/v[0-9].*[0-9]' |grep -o '[0-9].*[0-9]')
          mtg_version=$(curl -s https://github.com/9seconds/mtg/releases/latest |grep -o 'tag\/v[0-9].*[0-9]' |grep -o '[0-9].*[0-9]')
          echo -e "shadowsocks-rust ${ss_version}\nv2ray-core ${v2ray_version}\nmtg ${mtg_version}" |tee VERSION
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")
      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --local user.email 50695187+tr1s7an@users.noreply.github.com
          git config --local user.name tr1s7an
          git add .
          git commit -m "New release version"
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: with-mtg 

  build:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.modified == 'true'
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tr1s7an/test:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
